# Generated by Django 2.2.2 on 2019-07-05 02:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorityMenu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='权限ID')),
                ('authority_name', models.CharField(default='', max_length=50, verbose_name='权限名称')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.AuthorityMenu')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EducationDegree',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='学历ID')),
                ('education_name', models.CharField(help_text='学历级别的分类', max_length=50, unique=True, verbose_name='学历名称')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InterviewAudit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='审计记录ID')),
                ('username', models.CharField(blank=True, default='', help_text='操作本次记录的用户名', max_length=50, verbose_name='用户名')),
                ('operation', models.CharField(blank=True, default='', help_text='操作本次记录的请求信息', max_length=50, verbose_name='操作请求')),
                ('ip_address', models.GenericIPAddressField(default='', help_text='操作本次记录的客户端IP地址', verbose_name='IP地址')),
                ('operation_content', models.TextField(blank=True, default='', verbose_name='操作内容')),
                ('operation_result', models.CharField(blank=True, default='', max_length=50, verbose_name='操作结果')),
                ('operation_error_msg', models.TextField(blank=True, default='', verbose_name='报错信息')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='NationInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='民族类别ID')),
                ('nation_name', models.CharField(default='', help_text='民族类别名称', max_length=30, verbose_name='民族类别名称')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='图片ID')),
                ('picture_uuid', models.UUIDField(default=uuid.uuid4, help_text='图片的唯一标识', verbose_name='图片UUID')),
                ('picture_name', models.CharField(blank=True, default='未说明', max_length=50, null=True, verbose_name='图片名称')),
                ('picture_path', models.ImageField(max_length=200, upload_to='images/%Y/%m', verbose_name='图片路径')),
                ('main_picture', models.BooleanField(default=False, verbose_name='是否为代表性图片')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
        ),
        migrations.CreateModel(
            name='ProvinceCityCountry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('region_name', models.CharField(default='', help_text='区域名称', max_length=50, verbose_name='区域名称')),
                ('zipcode', models.CharField(default='', help_text='邮编', max_length=50, verbose_name='邮编')),
                ('region_level', models.CharField(choices=[('0', '省级'), ('1', '市级'), ('2', '县级'), ('3', '镇级'), ('4', '乡级'), ('5', '村级'), ('99', '未分级')], default=99, help_text='0~5,省市县镇乡村', max_length=10, verbose_name='区域等级')),
                ('region_status', models.CharField(choices=[('0', '正常使用'), ('1', '未正常使用')], help_text='0 正常使用，1 未正常使用', max_length=10, verbose_name='区域使用状态')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.ProvinceCityCountry')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RegisterUserInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('username', models.CharField(default='', help_text='用户登录所需账号', max_length=50, unique=True, verbose_name='用户名')),
                ('nickname', models.CharField(default='', max_length=50, unique=True, verbose_name='昵称')),
                ('password', models.CharField(default='', help_text='用户登录所需密码', max_length=300, verbose_name='用户登录所需密码')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RoleAuthority',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='角色权限ID')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('authority', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp.AuthorityMenu')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RoleInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='角色ID')),
                ('role_name', models.CharField(default='', max_length=50, verbose_name='角色名称')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('authorities', models.ManyToManyField(through='webapp.RoleAuthority', to='webapp.AuthorityMenu')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.RoleInfo')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_roleinfo_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UnitNature',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='学历ID')),
                ('unit_nature', models.CharField(help_text='学历级别的分类', max_length=50, unique=True, verbose_name='单位性质名称')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_unitnature_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WorkingHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('start_year', models.SmallIntegerField(verbose_name='起始年')),
                ('start_month', models.SmallIntegerField(verbose_name='起始月')),
                ('end_year', models.SmallIntegerField(verbose_name='结束年')),
                ('end_month', models.SmallIntegerField(verbose_name='结束月')),
                ('unit_name', models.CharField(default='', help_text='单位名称', max_length=50, verbose_name='单位名称')),
                ('job_content', models.CharField(default='', help_text='从事何种岗位工作', max_length=50, verbose_name='从事何种岗位工作')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('city_or_county', models.ForeignKey(help_text='单位所在市（或县）', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_or_country', to='webapp.ProvinceCityCountry', verbose_name='单位所在市（或县）')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_workinghistory_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户角色ID')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('role', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp.RoleInfo')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp.RegisterUserInfo')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_userrole_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('real_name', models.CharField(default='', help_text='真实姓名', max_length=50, verbose_name='真实姓名')),
                ('sex', models.CharField(choices=[('MALE', '男'), ('FEMALE', '女'), ('OTHER', '未填写')], default='OTHER', max_length=50, verbose_name='性别')),
                ('age', models.SmallIntegerField(blank=True, default=0, help_text='年龄', verbose_name='年龄')),
                ('fixed_telephone', models.CharField(blank=True, default='', help_text='固定电话（带区号）', max_length=20, verbose_name='固定电话（带区号）')),
                ('unit_address', models.CharField(blank=True, default='', help_text='单位地址', max_length=200, verbose_name='单位地址')),
                ('email', models.EmailField(blank=True, default='', max_length=50, verbose_name='邮箱')),
                ('birthday', models.DateField(blank=True, default='1000-09-09', verbose_name='生日')),
                ('status', models.CharField(choices=[('1', '启用'), ('2', '停用')], default=1, help_text='1-启用/2-停用', max_length=50, verbose_name='用户状态')),
                ('id_number', models.CharField(help_text='身份证件号码信息', max_length=20, verbose_name='身份证件号码')),
                ('work_unit', models.CharField(help_text='工作单位信息,可为空！', max_length=100, null=True, verbose_name='工作单位')),
                ('contact_number', models.CharField(help_text='联系电话', max_length=50, verbose_name='联系电话')),
                ('start_working_date', models.DateField(default='1000-09-09', help_text='起始工作时间,不用职位分类', null=True, verbose_name='起始工作时间')),
                ('working_year', models.SmallIntegerField(default=0, help_text='小于10个月，默认为小数年。如果大于10个月约等于1年', verbose_name='参加工作年限')),
                ('address', models.CharField(help_text='常住住址', max_length=200, verbose_name='常住住址')),
                ('id_card_address', models.CharField(help_text='身份证住址', max_length=200, verbose_name='身份证住址')),
                ('postal_code', models.CharField(help_text='邮政编码', max_length=20, verbose_name='邮政编码')),
                ('political_status', models.CharField(choices=[('0', '中共党员'), ('1', '中共预备党员'), ('2', '共青团员'), ('3', '民革党员'), ('4', '民盟盟员'), ('5', '民建会员'), ('6', '民进会员'), ('7', '农工党党员'), ('8', '致公党党员'), ('9', '九三学社社员'), ('10', '台盟盟员'), ('11', '无党派人士'), ('12', '群众(普通居民)')], default=12, help_text='政治面貌:01 中共党员,02 中共预备党员,03共青团员,04民革党员,05民盟盟员,06民建会员,07民进会员,08农工党党员, 09致公党党员,10九三学社社员,11台盟盟员,12无党派人士,13群众（现称普通居民，与居民身份证相对应）', max_length=20, verbose_name='政治面貌')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('hukou_city', models.ForeignKey(help_text='市信息ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_UserInfo', to='webapp.ProvinceCityCountry', verbose_name='市信息ID')),
                ('hukou_county', models.ForeignKey(help_text='县信息ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_UserInfo', to='webapp.ProvinceCityCountry', verbose_name='县信息ID')),
                ('hukou_province', models.ForeignKey(help_text='省信息ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='province_UserInfo', to='webapp.ProvinceCityCountry', verbose_name='省信息ID')),
                ('nation_info', models.ForeignKey(help_text='民族信息', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NationInfo_UserInfo', to='webapp.NationInfo', verbose_name='民族信息')),
                ('register_user_info', models.ForeignKey(blank=True, help_text='注册信息', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='RegisterUserInfo_UserInfo', to='webapp.RegisterUserInfo', verbose_name='注册信息')),
                ('two_inch_photo', models.ForeignKey(help_text='二寸证件照片信息', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Picture_UserInfo', to='webapp.Picture', verbose_name='二寸证件照片信息')),
                ('unit_nature', models.ForeignKey(help_text='单位性质信息', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='UnitNature_UserInfo', to='webapp.UnitNature', verbose_name='单位性质信息')),
                ('user_Info_working_history', models.ManyToManyField(to='webapp.WorkingHistory')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_userinfo_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False, verbose_name='用户ID')),
                ('graduation_or_not', models.CharField(blank=True, choices=[('0', '已毕业'), ('1', '应届生')], default=0, help_text='毕业与否', max_length=20, null=True, verbose_name='毕业与否')),
                ('hold_qualification_certificate_or_not', models.CharField(blank=True, choices=[('0', '持有'), ('1', '未持有')], default=0, help_text='是否持有资格证件', max_length=20, null=True, verbose_name='是否持有资格证件')),
                ('profession', models.CharField(blank=True, help_text='从事职业(专业工种，单一种类)', max_length=50, null=True, verbose_name='从事职业(专业工种)')),
                ('former_occupation', models.CharField(blank=True, help_text='原职业', max_length=20, null=True, verbose_name='原职业')),
                ('primary_level', models.CharField(blank=True, choices=[('1', '高级技工'), ('2', '技工'), ('3', '高级'), ('4', '中级'), ('5', '初级'), ('99', '无级别信息')], default=99, help_text='原级别', max_length=20, null=True, verbose_name='原级别')),
                ('original_certificate_number', models.CharField(blank=True, help_text='原证书编号', max_length=20, null=True, verbose_name='原证书编号')),
                ('issue_unit', models.CharField(default='', help_text='职业资格证书发行单位', max_length=100, null=True, verbose_name='职业资格证书发行单位')),
                ('issuance_time', models.DateField(blank=True, default='1000-09-09', null=True, verbose_name='原职业资格证发放时间')),
                ('start_the_work_of_this_occupation', models.DateField(blank=True, default='1000-09-09', null=True, verbose_name='从事本职业工作开始时间')),
                ('theoretical_achievements', models.SmallIntegerField(blank=True, default=0, help_text='考核理论成绩', null=True, verbose_name='考核理论成绩')),
                ('practical_operation', models.SmallIntegerField(blank=True, default=0, help_text='考核实际操作成绩', null=True, verbose_name='考核实际操作成绩')),
                ('current_certificate_number', models.CharField(blank=True, help_text='本次考核证书编号', max_length=20, null=True, verbose_name='本次考核证书编号')),
                ('current_issue_unit', models.CharField(blank=True, default='', help_text='职业资格证书发行单位', max_length=100, null=True, verbose_name='本次考核职业资格证书发行单位')),
                ('current_issuance_time', models.DateField(blank=True, default='1000-09-09', null=True, verbose_name='本次考核职业资格证书发行时间')),
                ('status_pay', models.BooleanField(default=False, help_text='缴费状态 True 已缴费', null=True, verbose_name='缴费状态')),
                ('payment_amount', models.IntegerField(default=0, help_text='已缴费金额', null=True, verbose_name='已缴费金额')),
                ('unpaid_amount', models.IntegerField(default=0, help_text='未缴费金额', null=True, verbose_name='未缴费金额')),
                ('declaration_of_occupation', models.CharField(help_text='申报职业', max_length=20, verbose_name='申报职业')),
                ('career_life', models.SmallIntegerField(default=0, help_text='本次申报职业年限', null=True, verbose_name='本次申报职业年限')),
                ('career_orientation', models.CharField(blank=True, help_text='职业方向', max_length=50, null=True, verbose_name='职业方向')),
                ('identification_level', models.CharField(choices=[('1', '高级技工'), ('2', '技工'), ('3', '高级'), ('4', '中级'), ('5', '初级'), ('99', '无级别信息')], default=99, help_text='鉴定级别', max_length=50, verbose_name='鉴定级别')),
                ('status', models.CharField(choices=[('1', '启用'), ('2', '停用')], default=1, help_text='1-启用/2-停用', max_length=50, verbose_name='信息使用状态')),
                ('work_training', models.TextField(help_text='个人工作及职业培训简历', max_length=500, null=True, verbose_name='个人工作及职业培训简历')),
                ('condition_selected', models.CharField(blank=True, help_text='申报条件代码', max_length=50, null=True, verbose_name='申报条件代码')),
                ('school_name', models.CharField(blank=True, help_text='毕业院校名称', max_length=50, null=True, verbose_name='毕业院校名称')),
                ('graduation_status', models.IntegerField(default=0, help_text='毕业状态', null=True, verbose_name='毕业状态')),
                ('major', models.CharField(blank=True, default='', help_text='专业或相关专业', max_length=50, null=True, verbose_name='专业或相关专业')),
                ('graduation_time', models.DateField(blank=True, default='1000-09-09', null=True, verbose_name='毕业时间')),
                ('apprentice_start', models.DateField(default='1000-09-09', help_text='学徒期开始', null=True)),
                ('apprentice_end', models.DateField(default='1000-09-09', help_text='学徒期结束', null=True)),
                ('apprentice_year', models.IntegerField(help_text='学徒期年', null=True)),
                ('apprentice_month', models.IntegerField(help_text='学徒期月', null=True)),
                ('original_certificate_worker_year', models.IntegerField(default=0, help_text='从事本职业工作年限（后），获取资格证之后', null=True, verbose_name='从事本职业工作年限（后）')),
                ('person_in_charge', models.CharField(blank=True, help_text='单位报名负责人', max_length=20, null=True, verbose_name='单位负责报名的负责人')),
                ('explain', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('certificate_photos', models.ForeignKey(help_text='原资格证书照片', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Certificate_Photos_StudentInfo', to='webapp.Picture', verbose_name='原资格证书照片')),
                ('diploma_certificate_photos', models.ForeignKey(help_text='院校毕业证件照片', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Diploma_Certificate_Photos_StudentInfo', to='webapp.Picture', verbose_name='院校毕业证件照片')),
                ('education_degree', models.ForeignKey(help_text='学历信息', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='EducationDegree_StudentInfo', to='webapp.EducationDegree', verbose_name='学历信息')),
                ('user_info', models.ForeignKey(default=None, help_text='学员基本信息', on_delete=django.db.models.deletion.CASCADE, related_name='webapp_studentinfo_UserInfo', to='webapp.UserInfo', verbose_name='学员基本信息')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_studentinfo_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='roleauthority',
            name='role',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp.RoleInfo'),
        ),
        migrations.AddField(
            model_name='roleauthority',
            name='user_operator',
            field=models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_roleauthority_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户'),
        ),
        migrations.AddField(
            model_name='registeruserinfo',
            name='roles',
            field=models.ManyToManyField(through='webapp.UserRole', to='webapp.RoleInfo'),
        ),
        migrations.AddField(
            model_name='provincecitycountry',
            name='user_operator',
            field=models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_provincecitycountry_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户'),
        ),
        migrations.AddField(
            model_name='picture',
            name='user_operator',
            field=models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_picture_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户'),
        ),
        migrations.AddField(
            model_name='nationinfo',
            name='user_operator',
            field=models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_nationinfo_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户'),
        ),
        migrations.CreateModel(
            name='FileManage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='图片ID')),
                ('file_uuid', models.UUIDField(default=uuid.uuid4, help_text='文件的唯一标识', verbose_name='文件UUID')),
                ('file_name', models.CharField(blank=True, default='未说明', max_length=50, null=True, verbose_name='图片名称')),
                ('file_path', models.CharField(default='', max_length=500, verbose_name='文件路径')),
                ('file_status', models.BooleanField(default=True, verbose_name='文件是否存在')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_filemanage_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
        ),
        migrations.AddField(
            model_name='educationdegree',
            name='user_operator',
            field=models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_educationdegree_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户'),
        ),
        migrations.AddField(
            model_name='authoritymenu',
            name='user_operator',
            field=models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_authoritymenu_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户'),
        ),
        migrations.CreateModel(
            name='UserAuthority',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户权限ID')),
                ('explain', models.TextField(blank=True, default='', max_length=200, verbose_name='说明')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='生成时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('authority', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp.AuthorityMenu')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='webapp.UserInfo')),
                ('user_operator', models.ForeignKey(blank=True, help_text='操作用户记录', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webapp_userauthority_Operator', to='webapp.RegisterUserInfo', verbose_name='操作用户')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('user', 'authority')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='roleauthority',
            unique_together={('role', 'authority')},
        ),
    ]
